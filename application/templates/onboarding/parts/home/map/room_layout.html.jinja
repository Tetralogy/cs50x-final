Place the room layout here.
(if the user wants to, they can upload a screenshot from google maps of their house)
tabs for selecting home floor/level

icon selection section goes here

map of the floor
square canvas


list of rooms entered goes here
  <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css"/>

  
  <!-- Simple List -->
  <div id="simpleList" class="list-group">
    <div class="list-group-item">This is <a href="http://rubaxa.github.io/Sortable/">Sortable</a></div>
    <div class="list-group-item">It works with Bootstrap...</div>
    <div class="list-group-item">...out of the box.</div>
    <div class="list-group-item">It has support for touch devices.</div>
    <div class="list-group-item">Just drag some elements around.</div>
  </div>
  
  
  <!-- List with handle -->
  <div id="listWithHandle" class="list-group">
    <div class="list-group-item">
      <span class="badge">14</span>
      <span class="glyphicon glyphicon-move" aria-hidden="true"></span>
      Drag me by the handle
    </div>
    <div class="list-group-item">
      <span class="badge">2</span>
      <span class="glyphicon glyphicon-move" aria-hidden="true"></span>
      You can also select text
    </div>
    <div class="list-group-item">
      <span class="badge">1</span>
      <span class="glyphicon glyphicon-move" aria-hidden="true"></span>
      Best of both worlds!
    </div>
  </div>


<form class="sortable" hx-post="/save-order" hx-trigger="end">
  <div class="htmx-indicator">Updating...</div>
  <div><input type='hidden' name='item' value='1'/>Item 1</div>
  <div><input type='hidden' name='item' value='2'/>Item 2</div>
  <div><input type='hidden' name='item' value='3'/>Item 3</div>
  <div><input type='hidden' name='item' value='4'/>Item 4</div>
  <div><input type='hidden' name='item' value='5'/>Item 5</div>
  <input type='hidden' name='list_id' value='your_list_id_here'/>
</form>


<script>
  htmx.onLoad(function(content) {
      var sortables = content.querySelectorAll(".sortable");
      for (var i = 0; i < sortables.length; i++) {
        var sortable = sortables[i];
        var sortableInstance = new Sortable(sortable, {
            animation: 150,
            ghostClass: 'blue-background-class',
  
            // Make the `.htmx-indicator` unsortable
            filter: ".htmx-indicator",
            onMove: function (evt) {
              return evt.related.className.indexOf('htmx-indicator') === -1;
            },
  
            // Disable sorting on the `end` event
            onEnd: function (evt) {
              this.option("disabled", true);
            }
        });
  
        // Re-enable sorting on the `htmx:afterSwap` event
        sortable.addEventListener("htmx:afterSwap", function() {
          sortableInstance.option("disabled", false);
        });
      }
  })
</script>


<form hx-post="/create-new-list">
  <div class="htmx-indicator">Creating...</div>
  <input type="text" name="list_name" placeholder="Enter list name">
  <button type="submit">Create New List</button>
</form>

<script>
  htmx.onLoad(function(content) {
    var newListForm = content.querySelector("form[hx-post='/create-new-list']");
    newListForm.addEventListener("htmx:afterOnLoad", function() {
      // Handle the creation of new custom task lists
    });
  })
</script>