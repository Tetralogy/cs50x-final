<div class="container-fluid border border-primary">
{% for list_obj in userlists %}
{#{% if view == "hierarchy" %}
    {% include 'lists/generic_hierarchy.html.jinja' %}
{% else %}#}
    {% include 'lists/listname.html.jinja' %} {# todo: make toggle to hide/show debug info #}
    <div class="accordion" id="accordionExample">
    <div class="accordion-item">

        <h2 class="accordion-header">

    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#list-updater-{{ list_obj.id }}" aria-expanded="true" aria-controls="multiCollapseExample1 multiCollapseExample2">hide/show sublevel: {{ sublevel }} sublevel_limit: {{ sublevel_limit }}</button>
        </h2>
        <div
            id="list-updater-{{ list_obj.id }}"
            {% if list_obj.list_type == "Task" or view == "quicknote" or list_obj.list_type == "Floor" %}
                class="row g-0 row-cols-1 bg-dark border border-primary border-5
                rounded-4  sortable collapse show"
            {% elif list_obj.list_type == "Room" %}
                class="row g-0 row-cols-4 container-fluid bg-dark border
                border-primary border-5 rounded-4 p-1 sortable"
            {% elif list_obj.list_type == "RoomDefault" %}
                class="row container-fluid bg-dark border border-primary border-5
                rounded-4 p-1 typeslist"
            {% else %}
                class="row g-0 container-fluid bg-dark border border-primary
                border-5 rounded-4 p-1"
            {% endif %}
            hx-put="/update_list_order/{{ list_obj.id }}"
            hx-include="[name='items']"
            hx-trigger="end delay:1s, remove delay:1s, add delay:1s"
            hx-swap="none"
            hx-on::after-request=
            "console.log('revert called'); 
            if (event.detail.xhr.getResponseHeader('X-Revert') === 'true') {
                console.log('reverting');
                if (draggedItem && originalIndex !== null) {
                console.log('Reverting to original index');
                console.log('this:' + fromList.id + ', draggedItem: ' + draggedItem.id + ', originalIndex: ' + originalIndex);
                fromList.appendChild(draggedItem);
                fromList.insertBefore(draggedItem, fromList.children[originalIndex]);
                return;
                }
            }"
            hx-indicator="#updating-indicator"
            data-model="{{ list_obj.list_type }}"
            data-is-list="true"
            data-list_id="{{ list_obj.id }}"
            data-parent_entry_id = "{{ list_obj.parent_entry_id }}"
        >
            {% if reversed %}
                {% for entry in list_obj.entries | sort(attribute='order')| reverse %}
                    {% include 'lists/model/' + entry.item_model.lower() + '.html.jinja' %}
                {% endfor %}
            {% else %}
                {% for entry in list_obj.entries | sort(attribute='order') %}
                    {% include 'lists/model/' + entry.item_model.lower() + '.html.jinja' %}
                {% endfor %}
            {% endif %}

            {% if not list_obj %}
                {% if view == "quicknote" %}
                    {% include 'lists/model/task_placeholder.html.jinja' %}
                {% else %}
                    <h1>Failed to load list</h1>
                {% endif %}
            {% endif %}
        </div>
    </div>
    </div>
{#{% endif %}#}
{% endfor %}
</div>
