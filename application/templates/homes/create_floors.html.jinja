{% extends "base/layout.html" %}
{% block title %}
    Create New Home Form: floors
{% endblock %}

{% block main %}
    <h2>Floors</h2>
    <h3>Add New Floors and name them</h3>
    <h4>active floor #{{ current_user.active_home.active_floor_id }}</h4>
    <h4>current floor_list_id #{{ floor_list.id }} {{ floor_list.name }}</h4>
    <h4>current ground floor #{{ current_user.active_home.ground_floor_id }}</h4>

    <div class="row">
        <div class="col-12">
            <button
                hx-post="/create/Floor/{{ floor_list.id }}?order=0"
                hx-target="#floor-list-container"
                hx-swap="innerhtml"
                class="btn btn-primary"
            >
                Add Upper Floor
            </button>
        </div>
    </div>

    <div id="floor-list-container" hx-get="/show_list/{{ floor_list.id }}" hx-trigger="load">
    </div>



    <div class="row">
        <div class="col-12">
            <button 
                hx-post="/create/Floor/{{ floor_list.id }}?name=Basement"
                hx-target="#floor-list-container"
                hx-swap="innerhtml"
                class="btn btn-primary"
            >
                Add Basement
            </button>
        </div>
    </div>

    


    <div class="row">
        <div class="col-12">
            <button
                hx-post="/home/floors/setup"
                hx-include="[name='ground_floor']"
                class="btn btn-primary"
            >
                Confirm Floors and go to next step
            </button>
        </div>
    </div>


    <p>
        -----------------------------------------------------------------------
    </p>

    <div id="sortable-floors" data-list-id="{{ list_id }}" data-user-id="{{ user_id }}"></div>
<script src="{{ url_for('static', filename='js/sortable-floors.js') }}"></script>

    <script>
        document.addEventListener("htmx:load", function () {
            const sortlist = document.getElementById("floor-list");
            const sortableInstance = new Sortable(sortlist, {
                animation: 150,
                ghostClass: "blue-background-class",
                filter: ".htmx-indicator",
                handle: ".handle",

                onEnd: function (evt) {
                    const newIndex = evt.newIndex;
                    const newOrder = Array.from(sortlist.children).map(
                        (li) => li.dataset.id,
                    );
                    console.log("newOrder: " + newOrder);
                    htmx.ajax("PUT", "/update_list_order/{{ list_id }}", {
                        target: "#floor-list-container",
                        swap: "innerHTML",
                        values: { order: newOrder },
                    });
                },
            });
        });
    </script>

{% endblock %}
