{% extends "base/layout.html" %}
{% block title %}
    Create New Home Form: floors
{% endblock %}

{% block main %} #BUG: HIGHLIGHT ACTIVE FLOOR BY DEFAULT
    <h2>Floors</h2>
    <h3>Add New Floors and name them</h3>
    <h4>active floor #{{ current_user.active_home.active_floor_id }}</h4>
    <h4>current floor_list_id #{{ floor_list.id }} {{ floor_list.name }}</h4>
    <h4>
        current ground floor #{{ current_user.active_home.ground_floor_id }}
        {{ current_user.active_home.ground_floor.name }}
    </h4>
    {#<form
        action="/home/floors/setup"
        method="POST"
        hx-trigger="click from:#submitButton"
    >
        <div class="row">
            <div class="col-12">
                <button
                    data-bs-toggle="tooltip"
                    data-bs-html="true"
                    data-bs-title="<em>Tooltip</em> <u>with</u> <b>HTML</b>"
                    hx-post="/create/Floor/{{ floor_list.id }}"
                    hx-vals='{"order": "0"}'
                    hx-target="#floor-list-container"
                    hx-swap="afterbegin"
                    hx-on::after-request="triggerUpdateOrder()"
                    class="btn btn-primary"
                    type="button"
                >
                    Add Upper Floor
                </button>
            </div>
        </div>

        <div
            id="floor-list-container"
            class="sortable"
            hx-get="/show_list/{{ floor_list.id }}"
            hx-trigger="load"
            hx-target="this"
        ></div>

        <div class="row">
            <div class="col-12">
                <button
                    hx-post="/create/Floor/{{ floor_list.id }}"
                    hx-vals='{"name": "Basement"}'
                    hx-target="#floor-list-container"
                    hx-swap="beforeend"
                    class="btn btn-primary"
                    type="button"
                >
                    Add Basement
                </button>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <button class="btn btn-primary" id="submitButton" type="button">
                    Confirm Floors and go to create rooms
                </button>
            </div>
        </div>
    </form>#}
    <button type="button" class="btn btn-primary" 
    hx-post="/create/Floor"
    hx-target="[id*='list-updater-']"
    hx-vals='{"order_index": "0"}'
    hx-swap="afterbegin"
    hx-indicator="#updating-indicator"
    
    class="d-flex justify-content-center align-items-center input-group"
    style="min-width: 20em; max-width: 40em; display: block;"
    >Add Upper Floor</button>

    <button type="button" class="btn btn-primary" 
    hx-post="/create/Floor"
    hx-target="[id*='list-updater-']"
    hx-vals='{"name": "Basement"}'
    hx-swap="beforeend"
    hx-indicator="#updating-indicator"
    
    class="d-flex justify-content-center align-items-center input-group"
    style="min-width: 20em; max-width: 40em; display: block;"
    >Add Lower Floor</button>
    <form
        action="/home/floors/setup"
        method="POST"
        
    >
        <div
            class="row g-0 row-cols-4 container-fluid bg-dark border border-success border-5 rounded-bottom-4 p-1"
            id="floor-list-loader"
            hx-get="/show_list/{{ floor_list.id }}"
            hx-vals='{"list_model": "Floor", }'
            hx-trigger="load once"
            hx-swap="outerHTML"
            hx-indicator="#updating-indicator"
        >
            <input id="dummy-placeholder" type="hidden" name="items" />
            <div id="updating-indicator" class="htmx-indicator">
                Updating...
            </div>
        </div>

    
                <button class="btn btn-primary" id="submitButton" type="submit">
                    Confirm Floors and go to create rooms
                </button>
            
        
    </form>
    <!-- prettier-ignore-start -->
<script>
//   function triggerUpdateOrder(evt) {
//       const sortlist = document.getElementById("floor-list-container");
//       const newOrder = Array.from(sortlist.children).map(
//           (li) => li.dataset.id
//       );
//       console.log("newOrder: " + newOrder);
//       htmx.ajax("PUT", "/update_list_order/{{ floor_list.id }}", {
//           target: "#floor-list-container",
//           swap: "innerHTML",
//           values: { items: newOrder },
//       });
//   }
//   document.addEventListener("htmx:load", function () {
//       const sortlist = document.getElementById("floor-list-container");
//       const sortableInstance = new Sortable(sortlist, {
//           animation: 150,
//           ghostClass: "blue-background-class",
//           filter: ".htmx-indicator",
//           handle: "#handle",
//           removeOnSpill: true, // Enable plugin
//           // Called when item is spilled
//           onSpill: function (/**Event*/ evt) {
//               evt.item; // The spilled item
//               console.log("spill");
//               console.log("delete evt.item.dataset.id: " + evt.item.dataset.id);
//               htmx.ajax("DELETE", "/delete/" + {{ floor_list.id }} + "/" + evt.item.dataset.id, {
//           target: "#floor-list-container",
//           swap: "innerHTML",
//       });
//   },
//       onStart: function () {
//           const tooltipTriggerList = [].slice.call(
//               document.querySelectorAll('[data-bs-toggle="tooltip"]'),
//           );
//           tooltipTriggerList.map(function (tooltipTriggerEl) {
//               const tooltip =
//                   bootstrap.Tooltip.getInstance(tooltipTriggerEl);
//               if (tooltip) {
//                   tooltip.dispose();
//               }
//           });
//       },
//       onEnd: triggerUpdateOrder
//           });
//       });
//
</script>
<!-- prettier-ignore-end -->
{% endblock %}
